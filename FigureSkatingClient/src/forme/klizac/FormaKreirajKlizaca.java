/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.klizac;

import kontroler.Kontroler;
import domain.Drzava;
import domain.EnumPol;
import domain.Klizac;
import forme.FormMode;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import transfer.util.Session;

/**
 *
 * @author Bojana
 */
public class FormaKreirajKlizaca extends javax.swing.JDialog {

    /**
     * Creates new form FormaKreirajKlizaca
     */
    public FormaKreirajKlizaca(javax.swing.JDialog parent, boolean modal,
            FormMode formMode) {
        super(parent, modal);
        initComponents();
        populateCombo();
        adjustFormMode(formMode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        panel = new javax.swing.JPanel();
        lblIme = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        lblPrezime = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        lblPol = new javax.swing.JLabel();
        cmbPol = new javax.swing.JComboBox();
        lblDatumRodjenja = new javax.swing.JLabel();
        lblDatumRodjenja1 = new javax.swing.JLabel();
        cmbDrzava = new javax.swing.JComboBox();
        panelDugmici = new javax.swing.JPanel();
        btnKreiraj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnAzuriraj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        panelHeader = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        datRodjenja = new com.toedter.calendar.JDateChooser();

        jLabel1.setText("jLabel1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panel.setBackground(new java.awt.Color(255, 255, 255));

        lblIme.setBackground(new java.awt.Color(51, 51, 51));
        lblIme.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblIme.setForeground(new java.awt.Color(51, 51, 51));
        lblIme.setText("Ime:");

        txtIme.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtIme.setPreferredSize(new java.awt.Dimension(2, 20));

        lblPrezime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPrezime.setForeground(new java.awt.Color(51, 51, 51));
        lblPrezime.setText("Prezime:");

        txtPrezime.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtPrezime.setOpaque(false);
        txtPrezime.setPreferredSize(new java.awt.Dimension(2, 20));

        lblPol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPol.setForeground(new java.awt.Color(51, 51, 51));
        lblPol.setText("Pol:");

        lblDatumRodjenja.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDatumRodjenja.setForeground(new java.awt.Color(51, 51, 51));
        lblDatumRodjenja.setText("Datum rođenja:");

        lblDatumRodjenja1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDatumRodjenja1.setForeground(new java.awt.Color(51, 51, 51));
        lblDatumRodjenja1.setText("Država:");

        panelDugmici.setBackground(new java.awt.Color(102, 102, 102));

        btnKreiraj.setBackground(new java.awt.Color(255, 255, 255));
        btnKreiraj.setForeground(new java.awt.Color(51, 51, 51));
        btnKreiraj.setText("Kreiraj");
        btnKreiraj.setPreferredSize(new java.awt.Dimension(63, 30));
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        btnObrisi.setBackground(new java.awt.Color(255, 255, 255));
        btnObrisi.setForeground(new java.awt.Color(51, 51, 51));
        btnObrisi.setText("Obriši");
        btnObrisi.setPreferredSize(new java.awt.Dimension(59, 30));
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnAzuriraj.setBackground(new java.awt.Color(255, 255, 255));
        btnAzuriraj.setForeground(new java.awt.Color(51, 51, 51));
        btnAzuriraj.setText("Ažuriraj");
        btnAzuriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzurirajActionPerformed(evt);
            }
        });

        btnIzmeni.setBackground(new java.awt.Color(255, 255, 255));
        btnIzmeni.setForeground(new java.awt.Color(51, 51, 51));
        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnOdustani.setBackground(new java.awt.Color(255, 255, 255));
        btnOdustani.setForeground(new java.awt.Color(51, 51, 51));
        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDugmiciLayout = new javax.swing.GroupLayout(panelDugmici);
        panelDugmici.setLayout(panelDugmiciLayout);
        panelDugmiciLayout.setHorizontalGroup(
            panelDugmiciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDugmiciLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(panelDugmiciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnOdustani, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAzuriraj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnKreiraj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        panelDugmiciLayout.setVerticalGroup(
            panelDugmiciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDugmiciLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(btnKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAzuriraj, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        panelHeader.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 204));
        jLabel2.setText(" Klizač");

        txtID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        txtID.setPreferredSize(new java.awt.Dimension(2, 20));

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        datRodjenja.setDateFormatString("dd.MM.yyyy");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 66, Short.MAX_VALUE)
                        .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(lblIme)
                        .addGap(121, 121, 121)
                        .addComponent(txtIme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrezime)
                            .addComponent(lblPol)
                            .addComponent(lblDatumRodjenja1)
                            .addComponent(lblDatumRodjenja))
                        .addGap(61, 61, 61)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbDrzava, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbPol, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datRodjenja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(panelDugmici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIme))
                .addGap(31, 31, 31)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPol)
                    .addComponent(cmbPol, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDatumRodjenja)
                    .addComponent(datRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbDrzava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDatumRodjenja1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addComponent(panelDugmici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        adjustFormMode(FormMode.IZMENI_KLIZACA);
        populateComboPol();
        populateComboDrzava();
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnAzurirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzurirajActionPerformed

        String id = txtID.getText();
        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        String pol = cmbPol.getSelectedItem().toString();
        Date dat = datRodjenja.getDate();

        if (id.isEmpty() || ime.isEmpty() || prezime.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Sva polja moraju biti popunjena!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Drzava drzava = (Drzava) cmbDrzava.getSelectedItem();
        cmbDrzava.removeAllItems();
        cmbDrzava.addItem(drzava);

        Klizac klizac = new Klizac(id, ime,
                prezime, dat, EnumPol.valueOf(pol), drzava);

        boolean signal = Kontroler.getInstance().azurirajKlizaca(klizac);

        if (!signal) {

            JOptionPane.showMessageDialog(this, "Sistem je izmenio klizača!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);

            int rezultat = JOptionPane.showConfirmDialog(this, "Želite"
                    + " li da izmenite još klizača?",
                    "Pitanje", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (rezultat == JOptionPane.YES_OPTION) {
                this.dispose();
                FormaPretrazivanjeKlizaca frm = new FormaPretrazivanjeKlizaca(null,
                        true, FormMode.VIDI_KLIZACA);
                frm.setLocationRelativeTo(null);
                frm.setVisible(true);
            } else {
                this.dispose();
                new FormaPretrazivanjeKlizaca(null,
                        true, FormMode.PRETRAZIVANJE_KLIZACA).setVisible(true);
            }
            return;

        } else {

            JOptionPane.showMessageDialog(this,
                    "Sistem ne može da izmeni klizača!",
                    "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnAzurirajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        String id = txtID.getText().trim();
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        EnumPol pol = EnumPol.valueOf(cmbPol.getSelectedItem().toString());
        Drzava drzava = (Drzava) cmbDrzava.getSelectedItem();

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date dat = datRodjenja.getDate();

        Klizac klizac = new Klizac(id, ime, prezime,
                dat, pol, drzava);

        boolean obrisan = Kontroler.getInstance().obrisiKlizac(klizac);

        if (obrisan) {

            JOptionPane.showMessageDialog(this, "Sistem je obrisao klizača!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);

            int rezultat = JOptionPane.showConfirmDialog(this, "Želite"
                    + " li da obrišete još klizača?",
                    "Pitanje", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (rezultat == JOptionPane.YES_OPTION) {
                this.dispose();
                FormaPretrazivanjeKlizaca frm = new FormaPretrazivanjeKlizaca(null,
                        true, FormMode.VIDI_KLIZACA);
                frm.setLocationRelativeTo(null);
                frm.setVisible(true);
            } else {
                this.dispose();
                new FormaPretrazivanjeKlizaca(null,
                        true, FormMode.PRETRAZIVANJE_KLIZACA).setVisible(true);
            }
            return;

        } else {

            JOptionPane.showMessageDialog(this, "Sistem ne može da obriše klizača!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed

        String id = txtID.getText().trim();
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        Date datumRodjenja = datRodjenja.getDate();
        EnumPol pol = EnumPol.valueOf(cmbPol.getSelectedItem().toString().trim());
        Drzava drzava = (Drzava) cmbDrzava.getSelectedItem();

        if (ime.isEmpty()
                || prezime.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Sva polja moraju biti popunjena!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Klizac klizac = new Klizac("K-" + getNextID(), ime, prezime,
                datumRodjenja, pol, drzava);

        boolean sacuvan = Kontroler.getInstance().kreirajKlizaca(klizac);
        
        if (sacuvan) {
            JOptionPane.showMessageDialog(this, "Sistem je kreirao klizača! Novi klizač ima ID: " + klizac.getIdKlizaca(), "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);

            int rezultat = JOptionPane.showConfirmDialog(this, "Želite"
                    + " li da sačuvate još klizača?",
                    "Pitanje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (rezultat == JOptionPane.YES_OPTION) {
                vidiKlizaca(new Klizac());
            } else {
                dispose();
                new FormaPretrazivanjeKlizaca(null,
                        true, FormMode.PRETRAZIVANJE_KLIZACA).setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti klizača!", "Poruka",
                    JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnKreirajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAzuriraj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JComboBox cmbDrzava;
    private javax.swing.JComboBox cmbPol;
    private com.toedter.calendar.JDateChooser datRodjenja;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblDatumRodjenja;
    private javax.swing.JLabel lblDatumRodjenja1;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPol;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelDugmici;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void vidiKlizaca(Klizac klizac) {

        txtID.setText(klizac.getIdKlizaca());
        txtIme.setText(klizac.getIme());
        txtPrezime.setText(klizac.getPrezime());
        datRodjenja.setDate(klizac.getDatumRodjenja());
        cmbPol.removeAllItems();
        cmbPol.addItem(klizac.getPol()
                == null ? null : String.valueOf(klizac.getPol()));
        cmbDrzava.removeAllItems();
        cmbDrzava.addItem(klizac.getDrzava()
                == null ? null : klizac.getDrzava());

    }

    private void populateCombo() {

        populateComboPol();
        populateComboDrzava();

    }

    private void populateComboPol() {

        String klizacID = (String) Session.getInstance().
                getUseCaseParams().get("klizacID");

        Klizac klizac = Kontroler.getInstance().getKlizac(klizacID);

        cmbPol.removeAllItems();
        for (EnumPol pol : EnumPol.values()) {
            cmbPol.addItem(pol);
        }
        cmbPol.setSelectedItem(klizac.getPol() == null ? null : klizac.getPol());

    }

    private void populateComboDrzava() {
        String klizacID = (String) Session.getInstance().
                getUseCaseParams().get("klizacID");

        Klizac klizac = Kontroler.getInstance().getKlizac(klizacID);

        List<Drzava> drzave = Kontroler.getInstance().vratiListuDrzava();

        cmbDrzava.removeAllItems();

        for (Drzava drzava : drzave) {
            cmbDrzava.addItem(drzava);
        }

        cmbDrzava.setSelectedItem(klizac.getDrzava() == null ? null : klizac.getDrzava());

    }

    private void adjustFormMode(FormMode formMode) {
        switch (formMode) {
            case KREIRAJ_KLIZACA:

                txtID.setVisible(false);

                btnKreiraj.setVisible(true);
                btnIzmeni.setVisible(false);
                btnAzuriraj.setVisible(false);
                btnObrisi.setVisible(false);
                btnOdustani.setVisible(true);

                setTitle("Kreiranje klizača");
                break;
            case IZMENI_KLIZACA:

                txtIme.setEnabled(true);
                txtPrezime.setEnabled(true);
                datRodjenja.setEnabled(true);
                cmbPol.setEnabled(true);
                cmbDrzava.setEnabled(true);
                btnKreiraj.setVisible(false);
                btnIzmeni.setVisible(false);
                btnAzuriraj.setVisible(true);
                btnObrisi.setVisible(false);
                btnOdustani.setVisible(true);

                setTitle("Izmeni klizača");
                setKlizac();

                break;
            case VIDI_KLIZACA:

                txtID.setVisible(true);

                txtID.setEnabled(false);
                txtIme.setEnabled(false);
                txtPrezime.setEnabled(false);
                datRodjenja.setEnabled(false);
                cmbPol.setEnabled(false);
                cmbDrzava.setEnabled(false);

                btnKreiraj.setVisible(false);
                btnIzmeni.setVisible(true);
                btnAzuriraj.setVisible(false);
                btnObrisi.setVisible(true);
                btnOdustani.setVisible(true);

                setTitle("Pregled klizača");
                setKlizac();

                break;

        }
    }

    private void setKlizac() {

        String klizacID = (String) Session.getInstance().
                getUseCaseParams().get("klizacID");

        try {
            Klizac klizac = Kontroler.getInstance().getKlizac(klizacID);
            vidiKlizaca(klizac);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    "Greška!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private int getNextID() {

        List<Klizac> klizaci = Kontroler.getInstance().dajSveKlizace();
        int max = Integer.MIN_VALUE;
        for (Klizac klizac : klizaci) {
            int id = Integer.parseInt(klizac.getIdKlizaca().split("-")[1]);
            if (id > max) {
                max = id;
            }
        }
        return max + 1;

    }

}
